[
    {
        "id": "7059b6139c3c11a9",
        "type": "tab",
        "label": "Gestion Chauffage",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "89eb0c5ab1facf08",
        "type": "group",
        "z": "7059b6139c3c11a9",
        "name": "Récupératon des informations utile pour le fonctionnement des radiateurs",
        "style": {
            "label": true,
            "color": "#000000",
            "fill": "#92d04f",
            "stroke": "#000000"
        },
        "nodes": [
            "7e4399cb6e30148d",
            "8b2ff66ae6755e48",
            "7b236aee8582dd23",
            "eeaeb9fd7692ca87",
            "55ac3de4d86f3e7e",
            "1786d2a1f1d8a01a",
            "632d33d917ac0174",
            "cbe0c7791ca1f17a",
            "37ef3dec13bbe1b2",
            "59fe6c4e91650ef7",
            "f65d8916d1c1a75e",
            "dbab0de846d516d9",
            "4126427e167a0bb0",
            "cb3a5fd82943c242",
            "961d560c2621b8e7",
            "a6b739e61c4ec591",
            "ae05521e0850a960",
            "65a043c989f63458",
            "275c9b3c154b2c55",
            "85c0cb6a9b671829",
            "36be86cc70bf7954",
            "86d359210329efc0",
            "6434213ce31586f7",
            "9620741bda791612",
            "c72f7d6463d5ee50"
        ],
        "env": [],
        "x": 34,
        "y": 39,
        "w": 1252,
        "h": 482
    },
    {
        "id": "682df3f7b35020ab",
        "type": "group",
        "z": "7059b6139c3c11a9",
        "name": "Pour corriger bug raditeur LYLOU",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#000000",
            "color": "#ffffff"
        },
        "nodes": [
            "3b1a8a31584b2923",
            "84c784d37e138f66",
            "940dcf5245dac27c",
            "9fbf95642eaa0901"
        ],
        "env": [],
        "x": 34,
        "y": 1499,
        "w": 612,
        "h": 122
    },
    {
        "id": "9060c286eff61b1d",
        "type": "group",
        "z": "7059b6139c3c11a9",
        "name": "Lancement manuel de l'alimentation des variables FLOW",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#e3f3d3",
            "color": "#000000"
        },
        "nodes": [
            "ea42115cfe1bc6f9",
            "f177214382e0abcb",
            "7aaf36f3bed2e444",
            "6526ac8d5b4b8327",
            "b4a7ec8d9ed8a27b",
            "846eb235d21b7bb4",
            "f690f3da65dfd2d8",
            "4ea49fd9398ad0dd",
            "3f06fdb3dfb6dd3b",
            "af3d48622960e853",
            "82475749d5b0fb33"
        ],
        "env": [],
        "x": 34,
        "y": 539,
        "w": 1092,
        "h": 342
    },
    {
        "id": "dfaf0acc18b09d6e",
        "type": "group",
        "z": "7059b6139c3c11a9",
        "name": "Execution chauffage X min maxi + wait X min",
        "style": {
            "label": true,
            "fill": "#dbcbe7",
            "stroke": "#000000",
            "color": "#000000"
        },
        "nodes": [
            "486faba9e13d7f52",
            "458d740c3cc0a221",
            "6e602ce5e8c46411",
            "5c7c9da4c87b8ff7",
            "245d3f54e1fdbe92",
            "bfe6d265adb88432",
            "d50a707141aa5e85",
            "3a9376497f9e3327",
            "8f81ae25b3fb5ea3",
            "2c96e78293c1ade5",
            "91b1b5d6669c55cc",
            "b98a5f29e3de1f17",
            "fda9830e2b9e9c8f",
            "eeec5040aab1fe81",
            "3e2181b009e96b51",
            "4adc40b61ea73244",
            "c94c95436ea80185",
            "70ac5ab41a9fb043",
            "b2b75aaf2f494b27",
            "fa2cc4a5efb2156c",
            "a6cbb41d0b6ed001",
            "d3edb32e267b6e0b",
            "75b1155e6687f173",
            "d0e5ae384866bd6d",
            "cee8ad8087df8f57",
            "70695752507353ed",
            "313cad9a202c0f78"
        ],
        "env": [],
        "x": 34,
        "y": 1079,
        "w": 2792,
        "h": 402
    },
    {
        "id": "ef841bf7f889499f",
        "type": "group",
        "z": "7059b6139c3c11a9",
        "name": "Permet de donner l'ordre de chauffe + affichage de celui ci dans un input",
        "style": {
            "label": true,
            "stroke": "#000000",
            "fill": "#0070c0",
            "color": "#ffffff"
        },
        "nodes": [
            "80edd84e19354d29",
            "5a12da657db13a79",
            "4bf8347e0ff3dd92",
            "afa96926fa46f358",
            "d03080baa6e60d08",
            "8e891c1931724169",
            "910327429fbf7e3c",
            "93eae0b9413435a8",
            "2be67be23f8ac151",
            "6845a3aaf659ad14",
            "cdca0b2b2564323a"
        ],
        "env": [],
        "x": 34,
        "y": 899,
        "w": 1282,
        "h": 162
    },
    {
        "id": "8165a90dac2819ad",
        "type": "group",
        "z": "7059b6139c3c11a9",
        "name": "MAJ Input_number permettant d'afficher la valeur de chauffe",
        "style": {
            "label": true,
            "fill": "#ffff00",
            "color": "#000000"
        },
        "nodes": [
            "9e3180002438abfb",
            "5b395df83424d733",
            "341cc7972640b716",
            "a3da12b1f36a5373",
            "403c53c31f7c2642",
            "ea1b1c995341d7ea",
            "4f349f4a7360008a",
            "9305dbba9d23c968",
            "3a48094aaa75b387"
        ],
        "env": [],
        "x": 1334,
        "y": 39,
        "w": 1112,
        "h": 222
    },
    {
        "id": "7e4399cb6e30148d",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Température choisi manuellement",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_number.tcible_.*",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "num",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": 0,
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 190,
        "y": 100,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "8b2ff66ae6755e48",
        "type": "simple-queue",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "1000",
        "x": 360,
        "y": 300,
        "wires": [
            [
                "65a043c989f63458"
            ]
        ]
    },
    {
        "id": "7b236aee8582dd23",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Save input number température",
        "func": "//#Init flow \nmsg.person= msg.topic.replace('input_number.tcible_',\"\");\nmsg.type_entities = msg.topic.replace(msg.person,\"\");\nmsg.decision=\"\";\n\nparam_tcible = msg.person+\".\"+msg.topic;\n\nif(msg.type_entities=='input_number.tcible_'  ){\n    msg.value = Number(msg.payload);\n}\nflow.set(msg.person+\".\"+msg.topic, msg.value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 750,
        "y": 120,
        "wires": [
            [
                "cbe0c7791ca1f17a",
                "ae05521e0850a960"
            ]
        ]
    },
    {
        "id": "9e3180002438abfb",
        "type": "api-call-service",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "Input Number",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "debugenabled": false,
        "service_domain": "input_number",
        "service": "set_value",
        "entityId": "{{msg.entityid}}",
        "data": "",
        "dataType": "json",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 2340,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "341cc7972640b716",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "Modif Input_number",
        "func": "msg.entityid= {\n    \"data\": {\n        \"entity_id\": 'input_number.tcible_'+msg.person\n    }\n};\n\nmsg.payload  = { \n    \"data\": {   \n        \"entity_id\": 'input_number.tcible_'+msg.person,\n        value: msg.value\n    }\n}  \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2100,
        "y": 140,
        "wires": [
            [
                "9e3180002438abfb",
                "5b395df83424d733"
            ]
        ]
    },
    {
        "id": "3a48094aaa75b387",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "",
        "property": "decision",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "maj_input_number",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1410,
        "y": 140,
        "wires": [
            [
                "9305dbba9d23c968"
            ]
        ]
    },
    {
        "id": "eeaeb9fd7692ca87",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Save Calendrier",
        "func": "//#Init flow \nmsg.person= msg.topic.replace('calendar.chauffage_',\"\");\nmsg.type_entities = msg.topic.replace(msg.person,\"\");\nmsg.decision=\"\";\n\n\n\nmsg.param_tcible = msg.person+\".input_number.tcible_\"+msg.person;\n\n\nif(msg.type_entities=='calendar.chauffage_'){\n    msg.value = Number(msg.data.new_state.attributes.description);\n    \n    if(flow.get(msg.param_tcible)!= msg.value){\n        //flow.set(msg.flowx+\".input_number.tcible_\"+msg.flowx, msg.value);\n        msg.decision = \"maj_input_number\";\n    }\n}\nflow.set(msg.person+\".\"+msg.topic, msg.value);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "3a48094aaa75b387",
                "37ef3dec13bbe1b2",
                "ae05521e0850a960"
            ]
        ]
    },
    {
        "id": "55ac3de4d86f3e7e",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Calendrier",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "calendar.chauffage_.*",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "habool",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 180,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "1786d2a1f1d8a01a",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Transform Data",
        "func": "//#Init flow \nmsg.person= msg.topic.replace('binary_sensor.fenetre_door_',\"\");\nmsg.type_entities = msg.topic.replace(msg.person,\"\");\nmsg.value = msg.payload\nmsg.decision =\"\";\nflow.set(msg.person+\".\"+msg.topic, msg.value);\n         \n\nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 360,
        "wires": [
            [
                "4126427e167a0bb0",
                "ae05521e0850a960"
            ]
        ]
    },
    {
        "id": "632d33d917ac0174",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Fenetre",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "binary_sensor.fenetre_.*",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "habool",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 360,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "cbe0c7791ca1f17a",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "msg_inputnumber",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 80,
        "wires": []
    },
    {
        "id": "37ef3dec13bbe1b2",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "msg_calendrier",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 220,
        "wires": []
    },
    {
        "id": "5b395df83424d733",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2310,
        "y": 140,
        "wires": []
    },
    {
        "id": "59fe6c4e91650ef7",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "TemperatureCapteur",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.temperature_sa_t_ch_.*",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "num",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 150,
        "y": 300,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "f65d8916d1c1a75e",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Transform data",
        "func": "//#Init flow \nmsg.person= msg.topic.replace('sensor.temperature_sa_t_ch_',\"\");\nmsg.type_entities = msg.topic.replace(msg.person,\"\");\nmsg.value = Number(msg.payload);\n\nflow.set(msg.person+\".\"+msg.topic, msg.value);\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 300,
        "wires": [
            [
                "dbab0de846d516d9",
                "ae05521e0850a960"
            ]
        ]
    },
    {
        "id": "dbab0de846d516d9",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "msg_tempcapteur",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 300,
        "wires": []
    },
    {
        "id": "4126427e167a0bb0",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "msg_fenetre",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 360,
        "wires": []
    },
    {
        "id": "80edd84e19354d29",
        "type": "simple-queue",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "2000",
        "x": 200,
        "y": 980,
        "wires": [
            [
                "4bf8347e0ff3dd92"
            ]
        ]
    },
    {
        "id": "5a12da657db13a79",
        "type": "link in",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "Sensor INFOS Chauffage",
        "links": [
            "157135174f7d82cb",
            "1581ef063cd9c30f",
            "4cfac435ab80c9f7",
            "f38efca2f6656f35",
            "ae05521e0850a960",
            "ede8940271be32e4"
        ],
        "x": 75,
        "y": 980,
        "wires": [
            [
                "80edd84e19354d29"
            ]
        ]
    },
    {
        "id": "4bf8347e0ff3dd92",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "Gestion de l'ordre ON/OFF",
        "func": "//msg.etat = \"test_\"+msg.person;\n\nmsg.topic_source = msg.topic;\nmsg.topic=msg.person;\n\nmsg.entity_id = `sensor.infos_${msg.person}`;\nmsg.nom_variable_fenetre = msg.person+'.binary_sensor.fenetre_door_'+msg.person;\nmsg.fenetre = flow.get(msg.nom_variable_fenetre);\n\nmsg.nom_variable_modeauto = msg.person+'.input_boolean.mode_auto_'+msg.person;\nmsg.modeauto = flow.get(msg.nom_variable_modeauto);\n\nmsg.nom_calendar = msg.person+'.calendar.chauffage_'+msg.person;\nmsg.value_calendar = flow.get(msg.nom_calendar);\n\nmsg.nom_input_number = msg.person+'.input_number.tcible_'+msg.person;\nmsg.value_input_number = flow.get(msg.nom_input_number);\n\n\n//flow.set(msg.person+'.timer', undefined);\nmsg.timer = flow.get(msg.person+'.timer');\n\nmsg.etat = flow.get(msg.person+'.etat');\n\n\nif(msg.person == 'elyot'){\n    msg.entity_radiateur='light.qubino_goap_zmnhjd1_flush_dimmer_pilot_wire_level_3';\n    msg.nom_temperature = msg.person+'.sensor.temperature_sa_t_ch_'+msg.person;\n}else if(msg.person == 'lylou'){\n    //msg.entity_radiateur='light.qubino_goap_zmnhjd1_flush_dimmer_pilot_wire_level_2'\n    msg.entity_radiateur='input_boolean.alumage_chauffage_lylou' ;\n    msg.nom_temperature = msg.person+'.sensor.temperature_sa_t_ch_'+msg.person;\n}else if(msg.person == 'parents'){\n    msg.entity_radiateur='light.qubino_goap_zmnhjd1_flush_dimmer_pilot_wire_level';\n    msg.nom_temperature = msg.person+'.sensor.temperature_sa_t_ch_'+msg.person;\n}else if(msg.person == 'bureau'){\n    msg.entity_radiateur='switch.on_off_light_5';\n    msg.nom_temperature = msg.person+'.sensor.temp_bureau_bt_temperature';\n}else if(msg.person == 'salonaquarium'){\n    msg.entity_radiateur='switch.radiateur_salon_d';\n    msg.nom_temperature = msg.person+'.sensor.temp_salonaquarium_bt_temperature';\n}else if(msg.person == 'salontele'){\n    msg.entity_radiateur='switch.radiateur_salon_g';\n    msg.nom_temperature = msg.person+'.sensor.temp_tele_bt_temperature';\n}\n\nmsg.value_temperature = flow.get(msg.nom_temperature);\n\nvar split_radiateur =  msg.entity_radiateur.split(\".\");\nmsg.type_radiateur = split_radiateur[0];\n\n\nmsg.timer_relance = 60000*15; // relance dans 15 min\nmsg.timer_chauffage = 60000*10; // 10min\nif(msg.fenetre == true){\n    msg.etat = 'fenetre_ouverte';\n    msg.etat_radiateur = 'off';\n    msg.pass=true;\n}else{\n    if(msg.value_input_number >msg.value_temperature){\n        if(msg.timer < Date.now() || msg.timer == undefined){\n            msg.etat = 'Actif '+(msg.timer_chauffage/60000)+' min'; \n            msg.etat_radiateur = 'on';\n            msg.pass=true;\n        }else{\n            //msg.etat = 'wait'\n            msg.pass=false;\n        }\n    }else{\n        msg.etat = 'off'; \n        msg.etat_radiateur = 'off';\n        msg.pass=true\n    }\n}\n\nmsg.payload = {\n    data: {\n        state: msg.etat,\n        //attributes: {\n           //friendly_name: msg.payload.name, \n           // unit_of_measurement: msg.unit,\n           // device_class: msg.device_class\n        //}\n    }\n};\n\n\nflow.set(msg.person+\".etat\", msg.etat);\n         \nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 420,
        "y": 980,
        "wires": [
            [
                "8e891c1931724169"
            ]
        ]
    },
    {
        "id": "afa96926fa46f358",
        "type": "ha-api",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "",
        "server": "eabf9f6c62f75bbd",
        "version": 1,
        "debugenabled": false,
        "protocol": "http",
        "method": "post",
        "path": "/api/states/{{entity_id}}",
        "data": "",
        "dataType": "json",
        "responseType": "json",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "results"
            }
        ],
        "x": 810,
        "y": 980,
        "wires": [
            [
                "6845a3aaf659ad14",
                "910327429fbf7e3c"
            ]
        ]
    },
    {
        "id": "ea42115cfe1bc6f9",
        "type": "inject",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 140,
        "y": 580,
        "wires": [
            [
                "b4a7ec8d9ed8a27b",
                "6526ac8d5b4b8327",
                "f177214382e0abcb",
                "f690f3da65dfd2d8",
                "4ea49fd9398ad0dd"
            ]
        ]
    },
    {
        "id": "f177214382e0abcb",
        "type": "ha-get-entities",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Get_capteur_fenetre",
        "server": "eabf9f6c62f75bbd",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "starts_with",
                "value": "binary_sensor.fenetre",
                "valueType": "str"
            }
        ],
        "output_type": "split",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 450,
        "y": 580,
        "wires": [
            [
                "7aaf36f3bed2e444"
            ]
        ]
    },
    {
        "id": "7aaf36f3bed2e444",
        "type": "change",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Set Topic",
        "rules": [
            {
                "t": "move",
                "p": "payload.entity_id",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            },
            {
                "t": "move",
                "p": "payload.state",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 580,
        "wires": [
            [
                "3f06fdb3dfb6dd3b"
            ]
        ]
    },
    {
        "id": "6526ac8d5b4b8327",
        "type": "ha-get-entities",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Get TemperatureCapteur",
        "server": "eabf9f6c62f75bbd",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "starts_with",
                "value": "sensor.temperature_sa_t_ch_",
                "valueType": "str"
            }
        ],
        "output_type": "split",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 460,
        "y": 640,
        "wires": [
            [
                "7aaf36f3bed2e444"
            ]
        ]
    },
    {
        "id": "b4a7ec8d9ed8a27b",
        "type": "ha-get-entities",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Get Calendrier",
        "server": "eabf9f6c62f75bbd",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "starts_with",
                "value": "calendar.chauffage",
                "valueType": "str"
            }
        ],
        "output_type": "split",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 430,
        "y": 760,
        "wires": [
            [
                "846eb235d21b7bb4"
            ]
        ]
    },
    {
        "id": "846eb235d21b7bb4",
        "type": "change",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Set Topic",
        "rules": [
            {
                "t": "move",
                "p": "payload.attributes.description",
                "pt": "msg",
                "to": "data.new_state.attributes.description",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 610,
        "y": 760,
        "wires": [
            [
                "7aaf36f3bed2e444"
            ]
        ]
    },
    {
        "id": "f690f3da65dfd2d8",
        "type": "ha-get-entities",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Get Tcible",
        "server": "eabf9f6c62f75bbd",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "starts_with",
                "value": "input_number.tcible",
                "valueType": "str"
            }
        ],
        "output_type": "split",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 410,
        "y": 700,
        "wires": [
            [
                "7aaf36f3bed2e444"
            ]
        ]
    },
    {
        "id": "cb3a5fd82943c242",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "ModeAuto",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.mode_auto.*",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "habool",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 120,
        "y": 420,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "961d560c2621b8e7",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Transform Data",
        "func": "//#Init flow \nmsg.person= msg.topic.replace('input_boolean.mode_auto_',\"\");\nmsg.type_entities = msg.topic.replace(msg.person,\"\");\nmsg.value = msg.payload\nmsg.decision =\"\";\n\nflow.set(msg.person+\".\"+msg.topic, msg.value);\n         \n\nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 420,
        "wires": [
            [
                "a6b739e61c4ec591",
                "ae05521e0850a960"
            ]
        ]
    },
    {
        "id": "a6b739e61c4ec591",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "msg_modeauto",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "ae05521e0850a960",
        "type": "link out",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Out",
        "mode": "link",
        "links": [
            "5a12da657db13a79",
            "6c1603ae1e384a81"
        ],
        "x": 875,
        "y": 340,
        "wires": []
    },
    {
        "id": "4ea49fd9398ad0dd",
        "type": "ha-get-entities",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Get ModeAuto",
        "server": "eabf9f6c62f75bbd",
        "version": 0,
        "rules": [
            {
                "property": "entity_id",
                "logic": "starts_with",
                "value": "input_boolean.mode_auto",
                "valueType": "str"
            }
        ],
        "output_type": "split",
        "output_empty_results": false,
        "output_location_type": "msg",
        "output_location": "payload",
        "output_results_count": 1,
        "x": 450,
        "y": 840,
        "wires": [
            [
                "7aaf36f3bed2e444"
            ]
        ]
    },
    {
        "id": "3f06fdb3dfb6dd3b",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Transform Data",
        "func": "if(msg.payload == 'on')\n{ \n msg.payload = true;\n}else if(msg.payload == 'off'){\n msg.payload = false;\n}\nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 580,
        "wires": [
            [
                "82475749d5b0fb33"
            ]
        ]
    },
    {
        "id": "3b1a8a31584b2923",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "682df3f7b35020ab",
        "name": "ButtonLylouRadiateur",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "input_boolean.alumage_chauffage_lylou",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "habool",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": false,
        "ignorePrevStateUnknown": false,
        "ignorePrevStateUnavailable": false,
        "ignoreCurrentStateUnknown": false,
        "ignoreCurrentStateUnavailable": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 1540,
        "wires": [
            [
                "940dcf5245dac27c"
            ]
        ]
    },
    {
        "id": "84c784d37e138f66",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "682df3f7b35020ab",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 1580,
        "wires": []
    },
    {
        "id": "940dcf5245dac27c",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "682df3f7b35020ab",
        "name": "Transform Data",
        "func": "msg.entity_radiateur='light.qubino_goap_zmnhjd1_flush_dimmer_pilot_wire_level_2'\n    \nif(msg.payload == true){\n    msg.etat_radiateur = \"off\";\n}else if(msg.payload == false){\n    msg.etat_radiateur = \"on\";\n}\n\nvar split_radiateur =  msg.entity_radiateur.split(\".\");\nmsg.type_radiateur = split_radiateur[0];\nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 1540,
        "wires": [
            [
                "84c784d37e138f66",
                "9fbf95642eaa0901"
            ]
        ]
    },
    {
        "id": "9fbf95642eaa0901",
        "type": "link out",
        "z": "7059b6139c3c11a9",
        "g": "682df3f7b35020ab",
        "name": "",
        "mode": "link",
        "links": [
            "d3edb32e267b6e0b",
            "40d5fee918c013ef",
            "b0a11164a9744d34",
            "b7d0b07f61e0409c"
        ],
        "x": 515,
        "y": 1540,
        "wires": []
    },
    {
        "id": "9305dbba9d23c968",
        "type": "api-current-state",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "current etat_mode_auto",
        "server": "eabf9f6c62f75bbd",
        "version": 2,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "input_boolean.mode_auto_{{person}}",
        "state_type": "habool",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 1610,
        "y": 140,
        "wires": [
            [
                "4f349f4a7360008a"
            ]
        ]
    },
    {
        "id": "af3d48622960e853",
        "type": "inject",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 780,
        "wires": [
            [
                "b4a7ec8d9ed8a27b"
            ]
        ]
    },
    {
        "id": "4f349f4a7360008a",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "SI Mode Auto TRUE",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1860,
        "y": 140,
        "wires": [
            [
                "341cc7972640b716"
            ]
        ]
    },
    {
        "id": "ea1b1c995341d7ea",
        "type": "link in",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "",
        "links": [
            "cdca0b2b2564323a",
            "1b1545ec32d0647a",
            "83e64b758c888a7e",
            "d4546f90a67dd03d",
            "dc1cefbf0af217be"
        ],
        "x": 1735,
        "y": 220,
        "wires": [
            [
                "403c53c31f7c2642"
            ]
        ]
    },
    {
        "id": "cdca0b2b2564323a",
        "type": "link out",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "",
        "mode": "link",
        "links": [
            "ea1b1c995341d7ea"
        ],
        "x": 1275,
        "y": 940,
        "wires": []
    },
    {
        "id": "403c53c31f7c2642",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "",
        "func": "msg.value = msg.value_calendar;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 220,
        "wires": [
            [
                "a3da12b1f36a5373",
                "341cc7972640b716"
            ]
        ]
    },
    {
        "id": "a3da12b1f36a5373",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "8165a90dac2819ad",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2050,
        "y": 200,
        "wires": []
    },
    {
        "id": "6845a3aaf659ad14",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "SI Mode Auto TRUE 2",
        "property": "modeauto",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": true,
        "outputs": 1,
        "x": 1120,
        "y": 940,
        "wires": [
            [
                "cdca0b2b2564323a"
            ]
        ]
    },
    {
        "id": "65a043c989f63458",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": "input_number.tcible",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "calendar.chauffage_",
                "vt": "str"
            },
            {
                "t": "regex",
                "v": "sensor.temp_.*._bt_temperature",
                "vt": "str",
                "case": false
            },
            {
                "t": "cont",
                "v": "sensor.temperature_sa_t_ch_",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "binary_sensor.fenetre",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "input_boolean.mode_auto",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": "sensor.infos_",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 510,
        "y": 300,
        "wires": [
            [
                "7b236aee8582dd23"
            ],
            [
                "eeaeb9fd7692ca87"
            ],
            [
                "36be86cc70bf7954"
            ],
            [
                "f65d8916d1c1a75e"
            ],
            [
                "1786d2a1f1d8a01a"
            ],
            [
                "961d560c2621b8e7"
            ],
            [
                "9620741bda791612"
            ]
        ]
    },
    {
        "id": "82475749d5b0fb33",
        "type": "link out",
        "z": "7059b6139c3c11a9",
        "g": "9060c286eff61b1d",
        "name": "Out manuelle",
        "mode": "link",
        "links": [
            "275c9b3c154b2c55"
        ],
        "x": 1085,
        "y": 580,
        "wires": []
    },
    {
        "id": "275c9b3c154b2c55",
        "type": "link in",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "IN Manuelle",
        "links": [
            "82475749d5b0fb33"
        ],
        "x": 275,
        "y": 400,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "486faba9e13d7f52",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1160,
        "y": 1320,
        "wires": [
            [
                "c94c95436ea80185"
            ]
        ]
    },
    {
        "id": "85c0cb6a9b671829",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "TemperatureCapteur2",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.temp_(bureau|tele|salonaquarium)_bt_temperature",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "num",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": true,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 160,
        "y": 240,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "36be86cc70bf7954",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Transform data",
        "func": "//#Init flow \nif(msg.topic == \"sensor.temp_salonaquarium_bt_temperature\"){\nmsg.person= \"salonaquarium\";\n}else if(msg.topic == \"sensor.temp_tele_bt_temperature\"){\nmsg.person= \"salontele\";\n}else if(msg.topic == \"sensor.temp_bureau_bt_temperature\"){\nmsg.person= \"bureau\";\n}\nmsg.type_entities = \"sensor\";\nmsg.value = Number(msg.payload);\n\nflow.set(msg.person+\".\"+msg.topic, msg.value);\n    \nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 240,
        "wires": [
            [
                "86d359210329efc0",
                "ae05521e0850a960"
            ]
        ]
    },
    {
        "id": "86d359210329efc0",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "msg_tempcapteur",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 260,
        "wires": []
    },
    {
        "id": "458d740c3cc0a221",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2040,
        "y": 1300,
        "wires": [
            [
                "b98a5f29e3de1f17"
            ]
        ]
    },
    {
        "id": "d03080baa6e60d08",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "msg.pass",
        "property": "pass",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1160,
        "y": 980,
        "wires": [
            [
                "2be67be23f8ac151"
            ]
        ]
    },
    {
        "id": "6e602ce5e8c46411",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1160,
        "y": 1260,
        "wires": [
            [
                "c94c95436ea80185"
            ]
        ]
    },
    {
        "id": "5c7c9da4c87b8ff7",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2040,
        "y": 1240,
        "wires": [
            [
                "b98a5f29e3de1f17"
            ]
        ]
    },
    {
        "id": "245d3f54e1fdbe92",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1160,
        "y": 1200,
        "wires": [
            [
                "c94c95436ea80185"
            ]
        ]
    },
    {
        "id": "bfe6d265adb88432",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2040,
        "y": 1180,
        "wires": [
            [
                "b98a5f29e3de1f17"
            ]
        ]
    },
    {
        "id": "d50a707141aa5e85",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 2730,
        "y": 1280,
        "wires": []
    },
    {
        "id": "3a9376497f9e3327",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1160,
        "y": 1140,
        "wires": [
            [
                "c94c95436ea80185"
            ]
        ]
    },
    {
        "id": "8f81ae25b3fb5ea3",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2040,
        "y": 1120,
        "wires": [
            [
                "b98a5f29e3de1f17"
            ]
        ]
    },
    {
        "id": "2c96e78293c1ade5",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "purge tmp",
        "func": "flow.set(msg.person+'.timer', undefined);\nmsg.etat ='verif_chauffage';\n\nmsg.payload = {\n    data: {\n        state: msg.etat,\n        //attributes: {\n           //friendly_name: msg.payload.name, \n           // unit_of_measurement: msg.unit,\n           // device_class: msg.device_class\n        //}\n    }\n};\n\n\nflow.set(msg.person+\".etat\", msg.etat);\n         \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2470,
        "y": 1280,
        "wires": [
            [
                "91b1b5d6669c55cc"
            ]
        ]
    },
    {
        "id": "8e891c1931724169",
        "type": "api-current-state",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "etat_rad",
        "server": "eabf9f6c62f75bbd",
        "version": 2,
        "outputs": 1,
        "halt_if": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "entity_id": "{{entity_radiateur}}",
        "state_type": "str",
        "blockInputOverrides": false,
        "outputProperties": [
            {
                "property": "etat_rad",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "entity"
            }
        ],
        "override_topic": false,
        "state_location": "payload",
        "override_payload": "msg",
        "entity_location": "data",
        "override_data": "msg",
        "x": 660,
        "y": 980,
        "wires": [
            [
                "afa96926fa46f358",
                "93eae0b9413435a8"
            ]
        ]
    },
    {
        "id": "910327429fbf7e3c",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "",
        "property": "etat_rad",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "etat_radiateur",
                "vt": "msg"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 990,
        "y": 980,
        "wires": [
            [
                "d03080baa6e60d08"
            ]
        ]
    },
    {
        "id": "91b1b5d6669c55cc",
        "type": "ha-api",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "server": "eabf9f6c62f75bbd",
        "version": 1,
        "debugenabled": false,
        "protocol": "http",
        "method": "post",
        "path": "/api/states/{{entity_id}}",
        "data": "",
        "dataType": "json",
        "responseType": "json",
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "results"
            }
        ],
        "x": 2610,
        "y": 1280,
        "wires": [
            [
                "d50a707141aa5e85"
            ]
        ]
    },
    {
        "id": "b98a5f29e3de1f17",
        "type": "simple-queue",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "2000",
        "x": 2280,
        "y": 1280,
        "wires": [
            [
                "2c96e78293c1ade5"
            ]
        ]
    },
    {
        "id": "6434213ce31586f7",
        "type": "server-state-changed",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Infos",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "exposeToHomeAssistant": false,
        "haConfig": [
            {
                "property": "name",
                "value": ""
            },
            {
                "property": "icon",
                "value": ""
            }
        ],
        "entityidfilter": "sensor.infos_.*",
        "entityidfiltertype": "regex",
        "outputinitially": true,
        "state_type": "habool",
        "haltifstate": "",
        "halt_if_type": "str",
        "halt_if_compare": "is",
        "outputs": 1,
        "output_only_on_state_change": false,
        "for": "0",
        "forType": "num",
        "forUnits": "minutes",
        "ignorePrevStateNull": true,
        "ignorePrevStateUnknown": true,
        "ignorePrevStateUnavailable": true,
        "ignoreCurrentStateUnknown": true,
        "ignoreCurrentStateUnavailable": true,
        "outputProperties": [
            {
                "property": "payload",
                "propertyType": "msg",
                "value": "",
                "valueType": "entityState"
            },
            {
                "property": "data",
                "propertyType": "msg",
                "value": "",
                "valueType": "eventData"
            },
            {
                "property": "topic",
                "propertyType": "msg",
                "value": "",
                "valueType": "triggerId"
            }
        ],
        "x": 110,
        "y": 480,
        "wires": [
            [
                "8b2ff66ae6755e48"
            ]
        ]
    },
    {
        "id": "9620741bda791612",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "Transform Data",
        "func": "//#Init flow \nmsg.person= msg.topic.replace('sensor.infos_',\"\");\nmsg.type_entities = msg.topic.replace(msg.person,\"\");\nmsg.value = msg.payload\nmsg.decision =\"\";\n\nflow.set(msg.person+\".\"+msg.topic, msg.value);\n         \n\nreturn msg\n ",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 460,
        "wires": [
            [
                "ae05521e0850a960",
                "c72f7d6463d5ee50"
            ]
        ]
    },
    {
        "id": "c72f7d6463d5ee50",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "89eb0c5ab1facf08",
        "name": "msg_infs",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 900,
        "y": 460,
        "wires": []
    },
    {
        "id": "fda9830e2b9e9c8f",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "property": "person",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "elyot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lylou",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "parents",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bureau",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "salontele",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "salonaquarium",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1010,
        "y": 1300,
        "wires": [
            [
                "3a9376497f9e3327"
            ],
            [
                "245d3f54e1fdbe92"
            ],
            [
                "6e602ce5e8c46411"
            ],
            [
                "486faba9e13d7f52"
            ],
            [
                "eeec5040aab1fe81"
            ],
            [
                "3e2181b009e96b51"
            ]
        ]
    },
    {
        "id": "eeec5040aab1fe81",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1160,
        "y": 1380,
        "wires": [
            [
                "c94c95436ea80185"
            ]
        ]
    },
    {
        "id": "3e2181b009e96b51",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 1160,
        "y": 1440,
        "wires": [
            [
                "c94c95436ea80185"
            ]
        ]
    },
    {
        "id": "4adc40b61ea73244",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "extinction +wait 15min",
        "func": "msg.etat_radiateur = 'off';\nvar timestampfinal = Date.now()+ msg.timer_relance;\nflow.set(msg.person+'.timer',timestampfinal);\nflow.set(msg.person+'.etat','wait off '+(msg.timer_relance/60000));\nmsg.delay = msg.timer_relance;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1560,
        "y": 1280,
        "wires": [
            [
                "70ac5ab41a9fb043"
            ]
        ]
    },
    {
        "id": "c94c95436ea80185",
        "type": "simple-queue",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "1000",
        "x": 1360,
        "y": 1280,
        "wires": [
            [
                "4adc40b61ea73244"
            ]
        ]
    },
    {
        "id": "70ac5ab41a9fb043",
        "type": "api-call-service",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "On/Off",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "debugenabled": false,
        "service_domain": "{{type_radiateur}}",
        "service": "turn_{{etat_radiateur}}",
        "entityId": "{{entity_radiateur}}",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 1730,
        "y": 1280,
        "wires": [
            [
                "b2b75aaf2f494b27"
            ]
        ]
    },
    {
        "id": "b2b75aaf2f494b27",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "property": "person",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "elyot",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "lylou",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "parents",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bureau",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "salontele",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "salonaquarium",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 1850,
        "y": 1280,
        "wires": [
            [
                "8f81ae25b3fb5ea3"
            ],
            [
                "bfe6d265adb88432"
            ],
            [
                "5c7c9da4c87b8ff7"
            ],
            [
                "458d740c3cc0a221"
            ],
            [
                "a6cbb41d0b6ed001"
            ],
            [
                "fa2cc4a5efb2156c"
            ]
        ]
    },
    {
        "id": "fa2cc4a5efb2156c",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2040,
        "y": 1420,
        "wires": [
            [
                "b98a5f29e3de1f17"
            ]
        ]
    },
    {
        "id": "a6cbb41d0b6ed001",
        "type": "delay",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "pauseType": "delayv",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 2040,
        "y": 1360,
        "wires": [
            [
                "b98a5f29e3de1f17"
            ]
        ]
    },
    {
        "id": "93eae0b9413435a8",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1020,
        "wires": []
    },
    {
        "id": "2be67be23f8ac151",
        "type": "link out",
        "z": "7059b6139c3c11a9",
        "g": "ef841bf7f889499f",
        "name": "",
        "mode": "link",
        "links": [
            "d3edb32e267b6e0b",
            "40d5fee918c013ef",
            "b0a11164a9744d34",
            "b7d0b07f61e0409c"
        ],
        "x": 1275,
        "y": 980,
        "wires": []
    },
    {
        "id": "d3edb32e267b6e0b",
        "type": "link in",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "links": [
            "9fbf95642eaa0901",
            "2be67be23f8ac151",
            "e9aafea079e9887c"
        ],
        "x": 75,
        "y": 1300,
        "wires": [
            [
                "75b1155e6687f173"
            ]
        ]
    },
    {
        "id": "75b1155e6687f173",
        "type": "api-call-service",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "server": "eabf9f6c62f75bbd",
        "version": 3,
        "debugenabled": false,
        "service_domain": "{{type_radiateur}}",
        "service": "turn_{{etat_radiateur}}",
        "entityId": "{{entity_radiateur}}",
        "data": "",
        "dataType": "jsonata",
        "mergecontext": "",
        "mustacheAltTags": false,
        "outputProperties": [],
        "queue": "none",
        "x": 290,
        "y": 1300,
        "wires": [
            [
                "cee8ad8087df8f57",
                "d0e5ae384866bd6d"
            ]
        ]
    },
    {
        "id": "d0e5ae384866bd6d",
        "type": "debug",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 1400,
        "wires": []
    },
    {
        "id": "cee8ad8087df8f57",
        "type": "switch",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "property": "etat_radiateur",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "off",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "on",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 1300,
        "wires": [
            [],
            [
                "70695752507353ed"
            ]
        ]
    },
    {
        "id": "70695752507353ed",
        "type": "simple-queue",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "1000",
        "x": 700,
        "y": 1300,
        "wires": [
            [
                "313cad9a202c0f78"
            ]
        ]
    },
    {
        "id": "313cad9a202c0f78",
        "type": "function",
        "z": "7059b6139c3c11a9",
        "g": "dfaf0acc18b09d6e",
        "name": "wait_relance",
        "func": "var timestampfinal = Date.now()+ msg.timer_chauffage;\nflow.set(msg.person+'.timer',timestampfinal);\nmsg.delay = msg.timer_chauffage;\nflow.set(msg.person+'.etat','wait on '+(msg.timer_chauffage/60000));\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 870,
        "y": 1300,
        "wires": [
            [
                "fda9830e2b9e9c8f"
            ]
        ]
    },
    {
        "id": "eabf9f6c62f75bbd",
        "type": "server",
        "name": "Home Assistant GOOD",
        "version": 1,
        "addon": false,
        "rejectUnauthorizedCerts": true,
        "ha_boolean": "y|yes|true|on|home|open",
        "connectionDelay": true,
        "cacheJson": true
    }
]
